<?php

/**
 * @file
 * Contains obiba_agate.module.
 * Agate authentication Drupal integration
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\core\Form\FormStateInterface;
use Drupal\Core\Link;

use Drupal\obiba_agate\ObibaAgate;


/**
 * Implements hook_help().
 */
function obiba_agate_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the mica_external_entities module.
    case 'help.page.obiba_mica':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Mica server data external entities Drupal integration') . '</p>';
      return $output;

    default:
  }
}


function obiba_agate_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  if (\Drupal::service('path.current')->getPath() == '/user/login') {
    $suggestions[] = $variables['theme_hook_original'] . '--user-login';
  }
}

/**
 * Preprocess page title
 */
function obiba_agate_preprocess_page_title(&$variables) {
  if (strstr(\Drupal::service('path.current')->getPath(), 'user/login')) {
    $variables['title'] = \Drupal::config(ObibaAgate::AGATE_SERVER_SETTINGS)->get(ObibaAgate::CONFIG_PREFIX_PAGE .
        '.' . 'obiba_login_page_title');
  }
}

/**
 * Implements hook_form_user_login_form_alter().
 *
 * Adjusts form on login page.
 */
function obiba_agate_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id){
    $agate_page_config = \Drupal::config(ObibaAgate::AGATE_SERVER_SETTINGS);
    $form['#prefix'] = '<div class="row">
    <div class="col-md-4"></div>
    <div class="well col-md-4">';
    $form['#suffix'] = '</div>
    <div class="col-md-4"></div>
    </div>';
    $form['name']['#title'] = $agate_page_config->get(ObibaAgate::CONFIG_PREFIX_PAGE . '.' . 'obiba_login_username_label');
    $form['name']['#smart_description'] = $form['pass']['#smart_description'] =
        $agate_page_config->get(ObibaAgate::CONFIG_PREFIX_PAGE . '.' . 'enable_form_tooltips') ? TRUE : FALSE;

    $form['actions']['submit']['#value'] = $agate_page_config->get(ObibaAgate::CONFIG_PREFIX_PAGE . '.' . 'obiba_login_button_caption');
    $form['actions']['submit']['#attributes'] = [
        'class' => ['btn btn-primary'],
    ];

    if($agate_page_config->get(ObibaAgate::CONFIG_PREFIX_PAGE . '.' .'access_signup_button_disabled')){
        unset($form['register']);
    }
    else{
        $form['register'] = [
            '#markup' => '<p class="register">' . Link::createFromRoute($agate_page_config->get(ObibaAgate::CONFIG_PREFIX_PAGE .
                    '.' . 'access_signup_button')
                    , 'user.register')->toString() . '</p>',
            '#weight' => 101,
        ];
    }
    $form['reset'] = [
        '#markup' => '<p class="forgot-password">' . Link::createFromRoute($agate_page_config->get(ObibaAgate::CONFIG_PREFIX_PAGE .
                '.' . 'obiba_reset_password_button_caption')
                , 'user.pass')->toString() . '</p>',
        '#weight' => 100,
    ];
}

/**
 * Implements hook_form_user_form_alter().
 *
 * Adjusts form on edit profile user page.
 */
function obiba_agate_form_alter(&$form, FormStateInterface $form_state, $form_id){
    if($form_id === 'user_form'){
        $form['account']['mail']['#disabled'] = TRUE;
        $form['account']['pass']['#type'] = 'hidden';
        $form['account']['current_pass']['#type'] = 'hidden';

        // Administrator can't edit Agate profile fields, as administrator he should do so on agate server
        if(\Drupal::currentUser()->hasPermission('administrator') && \Drupal::service('externalauth.externalauth')->load($form['account']['name']['#default_value'], 'obiba_agate')){
            $agate_config = \Drupal::config(ObibaAgate::AGATE_SERVER_SETTINGS);
            $user_field_mapping = $agate_config->get(ObibaAgate::CONFIG_PREFIX_USER_FIELDS_MAPPING);
            $form['account']['name']['#disabled'] = TRUE;

            // Read only Agate Roles convention: must begin with 'mica_' or 'opal_'
            $mica_roles = preg_grep('/mica\-|opal\-/m', $form['account']['roles']['#options']);
            foreach ($mica_roles as $mica_role){
                $form['account']['roles'][$mica_role]['#disabled'] = TRUE;
                if(in_array($mica_role, $form['account']['roles']['#default_value'])){
                    $form['account']['roles'][$mica_role]['#default_value'] = TRUE;
                }
            }

            // Read only Agate profile fields thar are enabled in the mapping drupal field configuration
            foreach ($user_field_mapping['drupal_profile_field'] as $field => $drupal_field){
                if($field != 'recaptcha' && ($user_field_mapping['enabled_import'][$field] == 1)){
                    $form[$drupal_field]['#disabled'] = TRUE;
                }
            }
        }

    }
}


/**
 * Implements hook_local_tasks_alter().
 *
 * Removes tabs from login page.
 */
function obiba_agate_menu_local_tasks_alter(&$data, $route_name) {
  if ($route_name == 'user.login'){
    unset($data['tabs'][0]['user.pass']);
    unset($data['tabs'][0]['user.register']);
  }
  if ($route_name == 'user.pass') {
    unset($data['tabs'][0]['user.pass']);
    unset($data['tabs'][0]['user.register']);
    unset($data['tabs'][0]['user.login']);
  }
  if ($route_name == 'user.register') {
    unset($data['tabs'][0]['user.pass']);
    unset($data['tabs'][0]['user.register']);
  }
}

/**
 * Implements hook_user_logou()
 *
 * @param $account
 */
function obiba_agate_user_logout($account){
    \Drupal::service('obiba_agate.server.agateclient')->logout();
}

/**
 * Implements hook_entity_type_alter().
 */
function obiba_agate_entity_type_build(array &$entity_types) {
    $entity = $entity_types['user'];
    $entity->addConstraint('UserAgateValidation')
            ->setFormClass('register', 'Drupal\obiba_agate\Form\AgateRegisterForm');
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function obiba_agate_user_insert(Drupal\Core\Entity\EntityInterface $entity) {
    if(!$entity->isAnonymous() && !\Drupal::currentUser()->hasPermission('administrator')){
        \Drupal::service('obiba_agate.controller.agateusermanager')->externalAuth->linkExistingAccount($entity->name->getValue()[0]['value'], 'obiba_agate', $entity);
    }
}


